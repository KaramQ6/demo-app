# Docker Compose for SmartTour.Jo
# Development and Production setup

version: '3.8'

services:
  # Frontend React Application
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    environment:
      - NODE_ENV=production
    restart: unless-stopped
    networks:
      - smarttour-network

  # Backend Python Service (for future use)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=${DATABASE_URL}
    restart: unless-stopped
    networks:
      - smarttour-network
    depends_on:
      - database

  # PostgreSQL Database (if needed)
  database:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=smarttour
      - POSTGRES_USER=${DB_USER:-smarttour}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-smarttour123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - smarttour-network

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - smarttour-network

volumes:
  postgres_data:


networks:
  smarttour-network:
    driver: bridge
